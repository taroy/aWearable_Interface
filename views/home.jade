header.jumbotron.subhead#overview

    h1 aWearable
    
section#homeContent
  .rowLine
  .row
    #progressBox
      .span3
        img(id='strekmann', src='images/strekmann.png')
        .alert.hide.alert-success img(id='e2-status', src='images/strekmann.png')
        
        label.label#strekmann(style="position: relative; top: -2px;") LED off
        .alert.hide.alert-info Please connect to your Arduino using the button.
        .alert.hide.alert-error Connect to Arduino first!
        .alert.hide.alert-success strekmann!

    
    .span9#e2-exampleConnection
      .page-header  
        h1 1. Connect your aWearable to the computer  
      p
        a.btn(href="#")#e2-buttonConnect
            i.icon-refresh
            |  Connect to aWearable
        .alert.alert-info Please connect to your aWearable using the button.
        .alert.hide.alert-error Unable to connect to aWearable!
        .alert.hide.alert-success Connection to aWearable established!
        <!--.span12#e2-secondStep -->
        
  .rowLine    
  .row
    #progressBox
      .span3

    
    .span9
      .page-header
        h1 2. Add friends 
  
  .rowLine    
  .row
    #progressBox
      .span3

    
    .span9
      .page-header
        h1 3. Add components 
      
        <div id="mainContainer">
        <h2></h2>        
        
        <div id="components">
        <p><b>Components:</b></p>
        <div id="dropContent">
        <div class="dragableBox1" id="box1"><img src="images/display.png"></div>
        <div class="dragableBox3" id="box3"><img src="images/motor.png"></div>
        <div class="dragableBox2" id="box2"><img src="images/lights.jpg"></div>
        
        <div class="dragableBox4" id="box4"><img src="images/speaker.png"></div>
        </div>
        </div>
        <div id="countries">
 
        <div id="box101" class="dragableBoxRight"></div>
        <div id="box103" class="dragableBoxRight"></div>		      
  
        <div id="box104" class="dragableBoxRight"></div>
        <div id="box102" class="dragableBoxRight"></div>
        </div>
        <div class="clear"></div>
        </div>
        </div>

      <div id="debug"></div>
      script
        <!--// Custom drop action for the target boxes-->
        function dropItems(idOfDraggedItem,targetId,x,y){
          var targetObj = document.getElementById(targetId);	<!--// Creating reference to target obj-->
          var subDivs = targetObj.getElementsByTagName('DIV');	<!--// Number of subdivs-->
          if(subDivs.length>0 && targetId!='components')return;	<!--// Sub divs exists on target, i.e. element already dragged on it. => return from function without doing anything-->
          var sourceObj = document.getElementById(idOfDraggedItem);	<!--// Creating reference to source, i.e. dragged object-->
          var numericIdTarget = targetId.replace(/[^0-9]/gi,'')/1;	<!--// Find numeric id of target-->
          var numericIdSource = idOfDraggedItem.replace(/[^0-9]/gi,'')/1;	<!--// Find numeric id of source-->
          if(numericIdSource==1 && numericIdTarget-numericIdSource==100){	<!--// In the html above, there's a difference in 100 between the id of the country and it's capital(example:	-->									// Oslo have id "box1" and Norway have id "box101", i.e. 1 + 100.
            sourceObj.style.backgroundColor='#54F05E';	<!--// Set green background color for dragged objec		-->
            loadDisplay()
          }
          else if(numericIdSource==2 && numericIdTarget-numericIdSource==100){	<!--// In the html above, there's a difference in 100 between the id of the country and it's capital(example:	-->									// Oslo have id "box1" and Norway have id "box101", i.e. 1 + 100.
            sourceObj.style.backgroundColor='#54F05E';	<!--// Set green background color for dragged objec		-->
            loadLights()
          }
          else if(numericIdSource==3 && numericIdTarget-numericIdSource==100){	<!--// In the html above, there's a difference in 100 between the id of the country and it's capital(example:	-->									// Oslo have id "box1" and Norway have id "box101", i.e. 1 + 100.
            sourceObj.style.backgroundColor='#54F05E';	<!--// Set green background color for dragged objec		-->
            loadVibration()
          }
          else if(numericIdSource==4 && numericIdTarget-numericIdSource==100){	<!--// In the html above, there's a difference in 100 between the id of the country and it's capital(example:	-->									// Oslo have id "box1" and Norway have id "box101", i.e. 1 + 100.
            sourceObj.style.backgroundColor='#54F05E';	<!--// Set green background color for dragged objec		-->
            loadSound()
          }
          else {
            sourceObj.style.backgroundColor='#FF4D45';	<!--// Reset back to default white background color-->
          }
          if(targetId=='components') {	<!--// Target is the capital box - append the dragged item as child of first sub div, i.e. as child of <div id="dropContent">-->
            targetObj = targetObj.getElementsByTagName('DIV')[0];
            sourceObj.style.backgroundColor='';
              if(numericIdSource==1) {
                document.getElementById("divDisplay").innerHTML= "";
              }
              if(numericIdSource==2) {
                document.getElementById("divLights").innerHTML= "";
              }
              if(numericIdSource==3) {
                document.getElementById("divVibration").innerHTML= "";
              }
              if(numericIdSource==4) {
                document.getElementById("divSound").innerHTML= "";
              }
             
          }
          targetObj.appendChild(sourceObj);	<!--// Append	-->
        }
        var dragDropObj = new DHTMLgoodies_dragDrop();	<!--// Creating drag and drop objec-->
        
        <!--// Assigning drag events to the components-->
        dragDropObj.addSource('box1',true);	<!--// Make <div id="box1"> dragable. slide item back into original position after drop-->
        dragDropObj.addSource('box2',true);	<!-- Make <div id="box2"> dragable. slide item back into original position after drop-->
        dragDropObj.addSource('box3',true);	<!-- Make <div id="box3"> dragable. slide item back into original position after drop-->
        dragDropObj.addSource('box4',true);	<!-- Make <div id="box4"> dragable. slide item back into original position after drop-->
        
        <!--// Assigning drop events on the targets-->
        dragDropObj.addTarget('box101','dropItems'); <!--// Set <div id="leftColumn"> as a drop target. Call function dropItems on drop-->
        dragDropObj.addTarget('box102','dropItems'); <!--// Set <div id="leftColumn"> as a drop target. Call function dropItems on drop-->
        dragDropObj.addTarget('box103','dropItems'); <!--// Set <div id="leftColumn"> as a drop target. Call function dropItems on drop-->
        dragDropObj.addTarget('box104','dropItems'); <!--// Set <div id="leftColumn"> as a drop target. Call function dropItems on drop-->
        dragDropObj.addTarget('components','dropItems'); <!--// Set <div id="leftColumn"> as a drop target. Call function dropItems on drop-->
        
        dragDropObj.init();	// Initizlizing drag and drop object
  
    .rowLine      
    .row
      #progressBox
        .span3
   
      .span9
        .page-header
          h1 4. Costumize
          .span4 
            <div id="options"> 
            <div id="divDisplay"></div>
            <div id="divLights"></div>
            </div>
          .span4
            <div id="right">
            <div id="divVibration"></div>
            <div id="divSound"></div>
            </div>
  
  .rowLine 
  .row
    #progressBox
      .span3
       
    .span9
      .page-header
        h1 5. Choose range
      
      p
        select.span2#e2-rangeValue
          option(value=333) 100m
          option(value=555) 200m
          option(value=666) 500m
        |  
  
  .rowLine
  .row
    #progressBox
      .span3
      
    .span9
      .page-header
        h1 6. Save application
      a.btn(href="#")#e2-buttonSend
        i.icon-retweet
        |  Save range
  
  .rowLine      
  .row
    #progressBox
      .span3
    
    .span9
     .page-header
        h1 3. Components 
          small <br>Choose the components you wish to use for your application
        .row
            .span12
              .awareness-buttons
                  a.btn(button type="button", onclick="loadDisplay()")
                    |  <b>Display</b>
                    a.btn(button type="button", onclick="loadLights()")
                      |  <b>Lights</b>
                      a.btn(button type="button", onclick="loadVibration()")
                        |  <b>Vibration</b>
                        a.btn(button type="button", onclick="loadSound()")
                          |  <b>Sound</b>
                        <div id="divDisplay"></div>
                        <div id="divLights"></div>
                        <div id="divVibration"></div>
                        <div id="divSound"></div>
                  
    
  .rowLine      
  .row
    .progList
      <ol class="progtrckr" data-progtrckr-steps="5">
      <li class="progtrckr-done">Order Processing</li>
      <li class="progtrckr-done">Pre-Production</li>
      <li class="progtrckr-done">In Production</li>
      <li class="progtrckr-done">Shipped</li>
      <li class="progtrckr-todo">Delivered</li>
      </ol>

